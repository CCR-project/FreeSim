opam-version: "2.0"
maintainer: "Minki Cho <minki.cho@sf.snu.ac.kr>, Youngju Song <youngju@mpi-sws.org>"
authors: "Minki Cho, Youngju Song, Dongjae Lee"
license: "BSD-3-Clause"
bug-reports: "https://github.com/CCR-project/FreeSim/issues"
dev-repo: "https://github.com/CCR-project/FreeSim/issues"
version: "dev"

synopsis: "Stuttering For Free"
description: """
One of the most common tools for proving behavioral refinements between transition systems is the method of \emph{simulation} proofs, which has been explored extensively over the past several decades.
Stuttering simulations are an extension of traditional simulations---used, for example, in CompCert---in which either the source or target of the simulation is permitted to ``stutter'' (stay in place) while the other side steps forward.
In the interest of ensuring soundness, however, existing stuttering simulations restrict proofs to only perform a finite number of stuttering steps before making \emph{synchronous progress}---a step of reasoning in which both sides of the simulation progress forward together.
This restriction guarantees that a terminating program cannot be proven to simulate a non-terminating one.

In this paper, we observe that the requirement to eventually achieve synchronous progress is burdensome and, what's more, unnecessary: it is possible to ensure soundness of stuttering simulations while only requiring \emph{asynchronous progress} (progress on both sides of the simulation that may be achieved with only stuttering steps).
Building on this observation, we develop a new simulation technique we call \textbf{FreeSim} (short for ``freely-stuttering simulations''), mechanized in Coq, and we demonstrate its effectiveness on a range of interesting case studies.
These include a simplification of the meta-theory of CompCert, as well as the \textbf{DTrees} library, which enriches the ITrees (Interaction Trees) library with dual non-determinism.
"""

tags: [
  "keyword:simulation"
  "keyword:coinduction"
  "keyword:dual non-determinism"
  "keyword:up to techniques"
  "keyword:companion"
  "keyword:Interaction Trees"
  "keyword:CompCert"
]

depends: [
  "coq" { (= "8.15.2") }
  "coq-paco" { (= "4.1.2") }
  "coq-itree" { (= "4.0.0") }
  "coq-ordinal" { (= "0.5.2") }
  "coq-compcert" { (= "3.11") }
]

build: [make "-j%{jobs}%"]
install: [make "install"]
